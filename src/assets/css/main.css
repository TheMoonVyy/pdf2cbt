@import "tailwindcss";
@import "tailwindcss-primeui";

@custom-variant dark (&:is(.dark *):not(.light *));

@custom-variant has-data-selected {
  &:has([data-selected="true"]) {
    @slot;
  }
}

@custom-variant has-data-unselected {
  &:has([data-selected="false"]) {
    @slot;
  }
}

:root {
  --p-primary-50: var(--color-emerald-50);
  --p-primary-100: var(--color-emerald-100);
  --p-primary-200: var(--color-emerald-200);
  --p-primary-300: var(--color-emerald-300);
  --p-primary-400: var(--color-emerald-400);
  --p-primary-500: var(--color-emerald-500);
  --p-primary-600: var(--color-emerald-600);
  --p-primary-700: var(--color-emerald-700);
  --p-primary-800: var(--color-emerald-800);
  --p-primary-900: var(--color-emerald-900);
  --p-primary-950: var(--color-emerald-950);

  --p-surface-0: var(--color-white);
  --p-surface-50: var(--color-zinc-50);
  --p-surface-100: var(--color-zinc-100);
  --p-surface-200: var(--color-zinc-200);
  --p-surface-300: var(--color-zinc-300);
  --p-surface-400: var(--color-zinc-400);
  --p-surface-500: var(--color-zinc-500);
  --p-surface-600: var(--color-zinc-600);
  --p-surface-700: var(--color-zinc-700);
  --p-surface-800: var(--color-zinc-800);
  --p-surface-900: var(--color-zinc-900);
  --p-surface-950: var(--color-zinc-950);

  --p-content-border-radius: 6px;
}

:root {
  --font-mono: 'Noto Mono', ui-monospace, SFMono-Regular, Menlo, Monaco,
    Consolas, 'Courier New', 'Liberation Mono', monospace;
}

:root {
  --p-primary-color: var(--p-primary-400);
  --p-button-primary-color: var(--p-surface-950);
  --p-primary-contrast-color: var(--p-surface-900);
  --p-primary-hover-color: var(--p-primary-300);
  --p-primary-active-color: var(--p-primary-200);
  --p-content-border-color: var(--p-surface-700);
  --p-content-hover-background: var(--p-surface-800);
  --p-content-hover-color: var(--p-surface-0);
  --p-highlight-background: color-mix(in srgb, var(--p-primary-400), transparent 84%);
  --p-highlight-color: rgba(255, 255, 255, 0.87);
  --p-highlight-focus-background: color-mix(in srgb, var(--p-primary-400), transparent 76%);
  --p-highlight-focus-color: rgba(255, 255, 255, 0.87);
  --p-text-color: var(--p-surface-0);
  --p-text-hover-color: var(--p-surface-0);
  --p-text-muted-color: var(--p-surface-400);
  --p-text-hover-muted-color: var(--p-surface-300);
}

@supports not (max-height: 100dvh) {
  .max-h-dvh {
    max-height: 100vh;
  }
}

@supports not (min-height: 100dvh) {
  .min-h-dvh {
    min-height: 100vh;
  }
}

/* safelist workaround */
.start-1\/2\! {
  inset-inline-start: calc(1/2 * 100%) !important;
}

/* for cbt-results page's detailed component */
@custom-variant result-correct {
  tbody > tr[data-result="correct"] {
    @slot;
  }
}
@custom-variant result-incorrect {
  tbody > tr[data-result="incorrect"] {
    @slot;
  }
}
@custom-variant result-partial {
  tbody > tr[data-result="partial"] {
    @slot;
  }
}
@custom-variant result-dropped {
  tbody > tr[data-result="dropped"] {
    @slot;
  }
}
@custom-variant result-bonus {
  tbody > tr[data-result="bonus"] {
    @slot;
  }
}
@custom-variant result-not-answered {
  tbody > tr[data-result="notAnswered"] {
    @slot;
  }
}

@custom-variant status-answered {
  tbody > tr[data-status="answered"] {
    @slot;
  }
}
@custom-variant status-not-answered {
  tbody > tr[data-status="notAnswered"] {
    @slot;
  }
}
@custom-variant status-not-visited {
  tbody > tr[data-status="notVisited"] {
    @slot;
  }
}
@custom-variant status-marked {
  tbody > tr[data-status="marked"] {
    @slot;
  }
}
@custom-variant status-marked-answered {
  tbody > tr[data-status="markedAnswered"] {
    @slot;
  }
}

/* For CbtResultsQuestionPanel and CbtInterfaceAnswerOptionsDiv */
.option-content::after {
  counter-increment: answer-options;
  content: var(--options-prefix) counter(answer-options, var(--counter-type)) var(--options-suffix);
}
